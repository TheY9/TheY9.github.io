<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>毛概</title>
      <link href="/3319.html"/>
      <url>/3319.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="毛概"><a href="#毛概" class="headerlink" title="毛概"></a>毛概</h1><h2 id="毛泽东思想"><a href="#毛泽东思想" class="headerlink" title="毛泽东思想"></a>毛泽东思想</h2><h3 id="毛泽东思想及其历史地位"><a href="#毛泽东思想及其历史地位" class="headerlink" title="毛泽东思想及其历史地位"></a>毛泽东思想及其历史地位</h3><h4 id="毛泽东思想的形成和发展"><a href="#毛泽东思想的形成和发展" class="headerlink" title="毛泽东思想的形成和发展"></a>毛泽东思想的形成和发展</h4><h4 id="毛泽栋思想的主要内容和活的灵魂"><a href="#毛泽栋思想的主要内容和活的灵魂" class="headerlink" title="毛泽栋思想的主要内容和活的灵魂"></a>毛泽栋思想的主要内容和活的灵魂</h4><h4 id="毛泽东思想的历史地位"><a href="#毛泽东思想的历史地位" class="headerlink" title="毛泽东思想的历史地位"></a>毛泽东思想的历史地位</h4><h3 id="新民主主义革命"><a href="#新民主主义革命" class="headerlink" title="新民主主义革命"></a>新民主主义革命</h3><h3 id="社会主义改造理论"><a href="#社会主义改造理论" class="headerlink" title="社会主义改造理论"></a>社会主义改造理论</h3><h3 id="社会主义建设道路初步探索的理论成果"><a href="#社会主义建设道路初步探索的理论成果" class="headerlink" title="社会主义建设道路初步探索的理论成果"></a>社会主义建设道路初步探索的理论成果</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>快速排序</title>
      <link href="/11306.html"/>
      <url>/11306.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//给出无序数组</span></span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="comment">//输出无序数组</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line"><span class="comment">//快速排序</span></span><br><span class="line">quicksort(arr);</span><br><span class="line"><span class="comment">//输出有序排序</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> high = arr.length-<span class="number">1</span>;</span><br><span class="line">quickSort(arr,low,high);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;<span class="comment">//??递归何时结束</span></span><br><span class="line"><span class="keyword">if</span>(low &lt; high) &#123;<span class="comment">//结束条件</span></span><br><span class="line"><span class="comment">//分区操作，将一个数组分成两个分区，返回分区界限索引</span></span><br><span class="line"><span class="keyword">int</span> index = partiton(arr,low,high);</span><br><span class="line"><span class="comment">//对左边进行分区操做</span></span><br><span class="line">quickSort(arr,low,index-<span class="number">1</span>);</span><br><span class="line"><span class="comment">//对右边进行分区操作</span></span><br><span class="line">quickSort(arr,index+<span class="number">1</span>,high);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">partiton</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span> </span>&#123;</span><br><span class="line"><span class="comment">//指定左指针i和右指针j</span></span><br><span class="line"><span class="keyword">int</span> i = low;</span><br><span class="line"><span class="keyword">int</span> j = high;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将第一个数作为基准值。挖坑</span></span><br><span class="line"><span class="keyword">int</span> x = arr[low];</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用循环实现分区操作</span></span><br><span class="line"><span class="keyword">while</span>(i&lt;j) &#123;</span><br><span class="line"><span class="comment">//1.从右往左移动，找到第一个小于基准值的值arr[j]</span></span><br><span class="line"><span class="keyword">while</span>(arr[j]&gt;=x &amp;&amp; i&lt;j) &#123;<span class="comment">//跳出循环就找到了</span></span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.将右侧找到的小于基准数的值加到左边的（坑）位置，左指针向中间移动一个位置i++</span></span><br><span class="line"><span class="keyword">if</span>(i&lt;j) &#123;</span><br><span class="line">arr[i] = arr[j];</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.从左向右移动i，找到第一个大于等于基准值的arr[i]</span></span><br><span class="line"><span class="keyword">while</span>(arr[i]&lt;x &amp;&amp; i&lt;j) &#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.将左侧找到的大于等于基准值的值加入到右边的坑中，右指针向中间移动一个位置j--</span></span><br><span class="line"><span class="keyword">if</span>(i&lt;j) &#123;</span><br><span class="line">arr[j] = arr[i];</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用基准值填坑，这是基准值的最终位置</span></span><br><span class="line">arr[i] = x; <span class="comment">//arr[j] = x;</span></span><br><span class="line"><span class="comment">//返回基准值的位置索引</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> i;<span class="comment">//return j;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构和算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冒泡排序和选择排序</title>
      <link href="/2174.html"/>
      <url>/2174.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//给出无序数组</span></span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="comment">//输出无序数组</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line">bubblesort(arr);</span><br><span class="line"><span class="comment">//输出有序排序</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubblesort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="comment">//1.进行arr.length()-1轮比较</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++) &#123;</span><br><span class="line"><span class="comment">//2.每轮比较arr.length-i次，使得最大的数往上冒</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;arr.length-i;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="comment">//换位操作</span></span><br><span class="line"><span class="keyword">int</span> temp = arr[j];</span><br><span class="line">arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectSort</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//给出无序数组</span></span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">4</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="comment">//输出无序数组</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line"><span class="comment">//选择顺序排序</span></span><br><span class="line">selectsort(arr);</span><br><span class="line"><span class="comment">//输出有序排序</span></span><br><span class="line">System.out.println(Arrays.toString(arr));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectsort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;arr.length;i++) &#123;<span class="comment">//arr.length()-1轮比较</span></span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;  <span class="comment">//定义第一个元素的索引</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=arr.length-i;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(arr[j]&gt;arr[index]) &#123;<span class="comment">//找到最大元素的索引</span></span><br><span class="line">index = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//交换在位置 arr.length()-i 和 index(最大值的索引)上的两个数</span></span><br><span class="line"><span class="keyword">int</span> temp = arr[index];</span><br><span class="line">arr[index] = arr[arr.length-i];</span><br><span class="line">arr[arr.length-i] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构和算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法</title>
      <link href="/34708.html"/>
      <url>/34708.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://cdn.jsdelivr.net/gh/TheY9/image/Myhead/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.jpg" alt=""></p><h1 id="java主类结构"><a href="#java主类结构" class="headerlink" title="java主类结构"></a><em>java主类结构</em></h1><p><code>通过代码进行简单了解</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javabasic.study01;<span class="comment">//包声明</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java主类结构</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lancer</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;<span class="comment">//类声明</span></span><br><span class="line">String name = <span class="string">"Black"</span>;<span class="comment">//成员变量声明</span></span><br><span class="line"><span class="keyword">int</span> age = <span class="number">2</span>;<span class="comment">//成员变量声明</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">(String food)</span> </span>&#123;<span class="comment">//方法声明，food为形参</span></span><br><span class="line">System.out.println(<span class="string">"Black在吃"</span>+food);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;<span class="comment">//主方法（主函数）程序的入口函数</span></span><br><span class="line">Dog dog = <span class="keyword">new</span> Dog();<span class="comment">//创建对象</span></span><br><span class="line">String food = <span class="string">"骨头"</span>;<span class="comment">//局部变量声明</span></span><br><span class="line">dog.eat(food);<span class="comment">//方法的调用，此时food为实参</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a><em>数据类型</em></h1><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/24/24166cf90e05cf87642973166402bec4.png"><blockquote><p>Java有八种基本数据类型，注意：String是引用数据类型。</p></blockquote><table><thead><tr><th>数据类型</th><th>内存空间(1个字节占8位)</th><th>默认值</th><th>取值范围</th></tr></thead><tbody><tr><td>byte</td><td>1(8位)</td><td>0</td><td>-128~127</td></tr><tr><td>short</td><td>2(16位)</td><td>0</td><td>-32768~32767</td></tr><tr><td>int</td><td>4(32位)</td><td>0</td><td>-2147483648~2147483647</td></tr><tr><td>long</td><td>8(64位)</td><td>0L</td><td>-9223372036854775808~9223372036854775807</td></tr><tr><td>float</td><td>4(32位)</td><td>0.0f</td><td>1.4E-45~3.4028235E38</td></tr><tr><td>double</td><td>8(64位)</td><td>0.0d</td><td>4.9E-324~1.7976931348623157E308</td></tr><tr><td>char</td><td>2(16位)</td><td>\u0000</td><td>-128~127</td></tr><tr><td>boolean</td><td>(1位)</td><td>false</td><td>true, false</td></tr></tbody></table><blockquote><p>为什么不能用浮点型表示金额？<br>由于计算机中保存的小数其实是十进制的小数的近似值，并不是准确值，所以，千万不要在代码中使用浮点数来表示金额等重要的指标。<br>建议使用BigDecimal或者Long（单位为分）来表示金额。</p></blockquote><p> <code>使用BigDecimal</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javabasic.study01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigDecimalTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    BigDecimal bd = BigDecimal.valueOf(<span class="number">1.0</span>);</span><br><span class="line">        bd = bd.subtract(BigDecimal.valueOf(<span class="number">0.1</span>));</span><br><span class="line">        bd = bd.subtract(BigDecimal.valueOf(<span class="number">0.1</span>));</span><br><span class="line">        bd = bd.subtract(BigDecimal.valueOf(<span class="number">0.1</span>));</span><br><span class="line">        bd = bd.subtract(BigDecimal.valueOf(<span class="number">0.1</span>));</span><br><span class="line">        bd = bd.subtract(BigDecimal.valueOf(<span class="number">0.1</span>));</span><br><span class="line">        System.out.println(bd);<span class="comment">//0.5</span></span><br><span class="line">        System.out.println(<span class="number">1.0</span> - <span class="number">0.1</span> - <span class="number">0.1</span> - <span class="number">0.1</span> - <span class="number">0.1</span> - <span class="number">0.1</span>);<span class="comment">//0.5000000000000001</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h2><blockquote><p>在Java中，引用类型的变量非常类似于C/C++的指针。</p><ul><li>Object obj;</li><li>String str;</li><li>Date date;</li></ul></blockquote><hr><h1 id="编写规范"><a href="#编写规范" class="headerlink" title="编写规范"></a><em>编写规范</em></h1><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javabasic.study01;<span class="comment">//单行注释</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文档注释</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lancer</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Annotation</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 方法注释</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args<span class="comment">/*行内注释*/</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 多行注释</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><blockquote><p>Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。<br>关于 Java 标识符，有以下几点需要注意：</p><ul><li>所有的标识符都应该以字母（A-Z 或者 a-z）,美元符（$）、或者下划线（_）开始</li><li>首字符之后可以是字母（A-Z 或者 a-z）,美元符（$）、下划线（_）或数字的任何字符组合</li><li>关键字不能用作标识符</li><li>标识符是大小写敏感的</li><li>合法标识符举例：age、$salary、_value、__1_value</li><li>非法标识符举例：123abc、-salary</li></ul></blockquote><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><blockquote><p>基本数据类型:byte , short , int , long , float , double , char , boolean<br>访问权限修饰符:public , private , protect , default<br>类、方法和变量修饰符:abstract , class , extends , final , implements , interface , native , new , static , strictfp , synchronized , transient , volatile<br>程序控制语句:break , case , continue , do , else , for , if , instanceof , return , switch , while<br>错误处理:assert , catch , finally , throw , try<br>包相关:import , package<br>变量引用:super , this , void<br>保留关键字:goto , const , null</p></blockquote><h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><blockquote><ul><li>每条语句要单独占一行，一条语句结束要以分号(英文分号)结束。</li><li>在变量声明时，尽量使每一个变量的声明独占一行，这样有助于添加注释。对于局部变量在声明的同时对其进行初始化。</li><li>为了方便维护，不用使用技术性很高、难懂、易混淆的判断语句。</li><li>多添加注释</li></ul></blockquote><p><code>变量和常量命名规范:</code><br><code>1.所有变量、方法、类名：见名知意</code><br><code>2.常量：大写字母和下划线：MAX_VALUE</code><br><code>3.类成员变量：首字母小写和驼峰原则:  monthSalary</code><br><code>4.局部变量：首字母小写和驼峰原则</code><br><code>5.类名：首字母大写和驼峰原则:  Man, GoodMan</code><br><code>6.方法名：首字母小写和驼峰原则: run(), runRun()</code></p><hr><h1 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a><em>变量与常量</em></h1><h2 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h2><blockquote><p>变量本质上就是代表一个”可操作的存储空间”，空间位置是确定的，但是里面放置什么值不确定。我们可通过变量名来访问“对应的存储空间”，从而操纵这个“存储空间”存储的值。</p><p>Java是一种强类型语言，每个变量都必须声明其数据类型。变量的数据类型决定了变量占据存储空间的大小。 比如，int a=3; 表示a变量的空间大小为4个字节。</p><p>变量作为程序中最基本的存储单元，其要素包括变量名，变量类型和作用域。变量在使用前必须对其声明, 只有在变量声明以后，才能为其分配相应长度的存储空间。</p></blockquote><h2 id="变量的分类"><a href="#变量的分类" class="headerlink" title="变量的分类"></a>变量的分类</h2><blockquote><p>实例变量</p><ul><li>独立于方法之外的变量，不过没有 static 修饰<br>局部变量</li><li>类的方法中的变量<br>类变量</li><li>独立于方法之外的变量，用 static 修饰</li></ul></blockquote><p>实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Variable</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> allClicks=<span class="number">0</span>;    <span class="comment">// 类变量</span></span><br><span class="line">    String str=<span class="string">"hello world"</span>;  <span class="comment">// 实例变量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;  <span class="comment">// 局部变量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量的声明"><a href="#变量的声明" class="headerlink" title="变量的声明"></a>变量的声明</h2><blockquote><p>数值型：</p><ul><li>定义数值型变量时要注意变量的取值范围，超出范围会出错。</li><li>对于long类型，若赋给的值大于int的最大值或最小值，则需在数字后面加L或l，表示该数值位长整数</li><li>如：long num = 2147483648L</li></ul><p>浮点型：</p><ul><li>在默认情况下，小数都被看作double型，若使用float型小数，则需要在小数后加上F或f。</li></ul><p>字符型：</p><ul><li>在定义字符串时要用单引号表示。</li><li>如： char s = ‘a’; 因为a在uniode中排序位置为97，所以也能这样写：char s = 97; </li></ul><p>布尔类型：</p><ul><li>包装类默认是Null,而基础类型是有其默认值的（默认值为false）。</li></ul></blockquote><h2 id="变量的有效范围"><a href="#变量的有效范围" class="headerlink" title="变量的有效范围"></a>变量的有效范围</h2><blockquote><p>成员变量</p><ul><li>在类体中所定义的变量被称之为成员变量，成员变量在整个类中都有效。成员变量可分两种：静态变量、实例变量。<br>局部变量</li><li>在类的方法体中定义的变量称之为局部变量。只在当前代码块中有效。</li></ul></blockquote><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><blockquote><p>常量通常指的是一个固定的值，例如：PI=3.14</p><p> 在Java语言中，主要是利用关键字final来定义一个常量。 常量一旦被初始化后不能再更改其值。</p></blockquote><h2 id="常量的声明"><a href="#常量的声明" class="headerlink" title="常量的声明"></a>常量的声明</h2><p><code>final double PI = 3.14;</code></p><hr><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a><em>运算符</em></h1><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><blockquote><p>赋值运算符以符号”=”表示，其功能是将右方操作数所含的值赋给左方的操作数。<br><code>例如：int a = 1;</code></p></blockquote><table><thead><tr><th>运算符</th><th>用法</th><th>等效表达式</th></tr></thead><tbody><tr><td>+=</td><td>a+=b</td><td>a=a+b</td></tr><tr><td>-=</td><td>a-=b</td><td>a=a-b</td></tr><tr><td>*=</td><td>a*=b</td><td>a=a*b</td></tr><tr><td>/=</td><td>a/=b</td><td>a=a/b</td></tr><tr><td>%=</td><td>a%=b</td><td>a=a%b</td></tr></tbody></table><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><table><thead><tr><th>运算符</th><th>说明</th><th>实例</th><th>结果</th></tr></thead><tbody><tr><td>+</td><td>加</td><td>1.25f+1</td><td>2.25</td></tr><tr><td>-</td><td>减</td><td>2.35-1.25</td><td>1.1</td></tr><tr><td>*</td><td>乘</td><td>2.5*4</td><td>10.0</td></tr><tr><td>/</td><td>除</td><td>11/4</td><td>2</td></tr><tr><td>%</td><td>取余数</td><td>11%4</td><td>3</td></tr></tbody></table><h2 id="自增和自减运算符"><a href="#自增和自减运算符" class="headerlink" title="自增和自减运算符"></a>自增和自减运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javabasic.study01;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试自增和自减运算符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lancer</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> d=<span class="number">0</span>;</span><br><span class="line">System.out.println(a++);<span class="comment">//0：先输出a的值再使a加1</span></span><br><span class="line">System.out.println(a);  <span class="comment">//1</span></span><br><span class="line">System.out.println(++b);<span class="comment">//1：先将b的值加1，再输出b的值</span></span><br><span class="line">System.out.println(b);  <span class="comment">//1</span></span><br><span class="line">System.out.println(c--);<span class="comment">//0：先输出c的值再使c减1</span></span><br><span class="line">System.out.println(c);  <span class="comment">//-1</span></span><br><span class="line">System.out.println(--d);<span class="comment">//-1：先将d的值减1，再输出d的值</span></span><br><span class="line">System.out.println(d);  <span class="comment">//-1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><blockquote><p>比较运算符用来进行比较运算。运算的结果为布尔值：true/false.</p></blockquote><table><thead><tr><th>运算符</th><th>含义</th><th>示例</th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>a==b</td></tr><tr><td>!=</td><td>不等于</td><td>a!=b</td></tr><tr><td>&gt;</td><td>大于</td><td>a&gt;b</td></tr><tr><td>&lt;</td><td>小于</td><td>a&lt;b</td></tr><tr><td>&gt;=</td><td>大于或等于</td><td>a&gt;=b</td></tr><tr><td>&lt;=</td><td>小于或等于</td><td>a&lt;=b</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><blockquote><p>&amp;：逻辑与，有一个假则为假<br>&amp;&amp;：短路与，有一个假则为假<br>|：逻辑或，有一个真则为真<br>||：短路或，有一个真则为真<br>！：逻辑非，取反<br>^：异或，相同为假，不同为真</p></blockquote><p><code>短路与和逻辑与</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.javabasic.study01;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试短路与和逻辑与</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lancer</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//1&gt;2的结果为false，那么整个表达式的结果即为false，将不再计算2&gt;(3/0)</span></span><br><span class="line"><span class="keyword">boolean</span> c = <span class="number">1</span>&gt;<span class="number">2</span> &amp;&amp; <span class="number">2</span>&gt;(<span class="number">3</span>/<span class="number">0</span>);</span><br><span class="line">System.out.println(c);</span><br><span class="line"><span class="comment">//1&gt;2的结果为false，那么整个表达式的结果即为false，还要计算2&gt;(3/0)，0不能做除数，//会输出异常信息</span></span><br><span class="line"><span class="keyword">boolean</span> d = <span class="number">1</span>&gt;<span class="number">2</span> &amp; <span class="number">2</span>&gt;(<span class="number">3</span>/<span class="number">0</span>);</span><br><span class="line">System.out.println(d);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><table><thead><tr><th>位运算符</th><th>说明</th></tr></thead><tbody><tr><td>~</td><td>取反</td></tr><tr><td>&amp;</td><td>按位与</td></tr><tr><td>&#124;</td><td>按位或</td></tr><tr><td>^</td><td>按位异或</td></tr><tr><td>&lt;&lt;</td><td>左移</td></tr><tr><td>&gt;&gt;</td><td>右移</td></tr><tr><td>&gt;&gt;&gt;</td><td>无符号右移</td></tr></tbody></table><blockquote><p>技巧：移位可以实现整数除以或乘以2<sup>n</sup>的效果。例如，y&lt;&lt;2和y*2<sup>2</sup>的效果相同；y&gt;&gt;1的结果和y/2<sup>1</sup>的结果相同。<br>总之，一个数左移n位，就是将这个数乘以2<sup>n</sup>;一个数右移n位，就是将这个数除以2<sup>n</sup>。</p></blockquote><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><blockquote><p>格式：<br><code>条件式？值1:值2</code><br>若条件式的值为true,则整个表达式取值1，否则取值2.<br><code>例如：boolean b=1&lt;2?true:false;//结果为true</code></p></blockquote><h2 id="运算符的优先级"><a href="#运算符的优先级" class="headerlink" title="运算符的优先级"></a>运算符的优先级</h2><table><thead><tr><th align="center">优先级</th><th align="center">描述</th><th align="center">运算符</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">括号</td><td align="center">()</td></tr><tr><td align="center">2</td><td align="center">正负号</td><td align="center">+、-</td></tr><tr><td align="center">3</td><td align="center">一元运算符</td><td align="center">++、–、！</td></tr><tr><td align="center">4</td><td align="center">乘除</td><td align="center">*、/、%</td></tr><tr><td align="center">5</td><td align="center">加减</td><td align="center">+、-</td></tr><tr><td align="center">6</td><td align="center">移位运算</td><td align="center">&gt;&gt;、&gt;&gt;&gt;、&lt;&lt;</td></tr><tr><td align="center">7</td><td align="center">比较大小</td><td align="center">&lt;、&gt;、&gt;=、&lt;=</td></tr><tr><td align="center">8</td><td align="center">比较是否相等</td><td align="center">==、!=</td></tr><tr><td align="center">9</td><td align="center">按位与运算</td><td align="center">&amp;</td></tr><tr><td align="center">10</td><td align="center">按位异或运算</td><td align="center">^</td></tr><tr><td align="center">11</td><td align="center">按位或运算</td><td align="center">&#124;</td></tr><tr><td align="center">12</td><td align="center">逻辑与运算</td><td align="center">&amp;&amp;</td></tr><tr><td align="center">13</td><td align="center">逻辑或运算</td><td align="center">&#124;&#124;</td></tr><tr><td align="center">14</td><td align="center">三元运算符</td><td align="center">?:</td></tr><tr><td align="center">15</td><td align="center">赋值运算符</td><td align="center">=</td></tr></tbody></table><hr><h1 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a><em>数据类型转换</em></h1><h2 id="隐式类型转换"><a href="#隐式类型转换" class="headerlink" title="隐式类型转换"></a>隐式类型转换</h2><blockquote><p>低级类型向高级类型自动转换。这些类型按精度从低到高排列的顺序为<br>byte&lt;short&lt;int&lt;long&lt;float&lt;double<br>如：<br><code>int x = 20;</code><br><code>float y = x;</code></p></blockquote><h2 id="显示类型转换"><a href="#显示类型转换" class="headerlink" title="显示类型转换"></a>显示类型转换</h2><blockquote><p>把高精度的变量赋值给低精度的变量时，必须使用显示类型转换（强转）<br>如：<br><code>int a = (int)1.5;    //此时a=1;</code><br><code>int b = (int)&#39;d&#39;;    //此时b=100;</code><br><code>c = (long)123.5;//此时c=123;</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java环境搭建和开发工具</title>
      <link href="/58347.html"/>
      <url>/58347.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Java环境搭建"><a href="#Java环境搭建" class="headerlink" title="Java环境搭建"></a>Java环境搭建</h1><h2 id="一、jdk下载和安装"><a href="#一、jdk下载和安装" class="headerlink" title="一、jdk下载和安装"></a>一、jdk<a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">下载</a>和安装</h2><blockquote><p>1.jdk 和 jre 的区别：</p></blockquote><ul><li>JDK：Java Development Kit 的简称，java 开发工具包，提供了 java 的开发环境和运行环境。</li><li>JRE：Java Runtime Environment 的简称，java 运行环境，为 java 的运行提供了所需环境。</li><li>区别：具体来说 JDK 其实包含了 JRE，同时还包含了编译 java 源码的编译器 javac，还包含了很多 java 程序调试和分析的工具。</li><li>简单来说：如果你需要运行 java 程序，只需安装 JRE 就可以了，如果你需要编写 java 程序，需要安装JDK。</li><li></li></ul><blockquote><p>2.下载和安装注意事项：</p></blockquote><ul><li>下载注意系统匹配（windows 系统下载 windows的）</li><li>安装路径没有特殊情况就默认！例如我的：C:\Program Files\Java\jdk1.8.0_201</li></ul><h2 id="二、环境变量配置"><a href="#二、环境变量配置" class="headerlink" title="二、环境变量配置"></a>二、环境变量配置</h2><ul><li>1.找到你的jdk安装路径  （默认安装路径 C:\Program Files\Java&quot;你的jdk版本”）</li><li>2.找到你的bin目录路径  （在jdk默认安装路径下 C:\Program Files\Java&quot;你的jdk版本”\bin）</li><li>3.进入电脑系统属性-&gt;环境变量-&gt;找到系统变量下的Path-&gt;新建-&gt;填入bin 目录路径（环境搭建如下图）</li></ul><img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/23/ac46f547a14c6f52d5d5510d4281b46b.png" width="80%"/> <img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/23/f1021ca09b5f762a762525112f421ae7.png" width="80%"/><img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/23/c194df409f1f28ff3189f3fa9f838748.png" width="80%"/> <img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/23/72dace543f169e1ec124e8cdeada85d3.png" width="80%"/> <img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/23/06696101f6070e884db4d65ef9b6d490.png" width="80%"/> <p>注意：配置JAVA_HOME也是可以的（这种方式方便以后使用）</p><img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/26/5a475c4351d2c3f69f146ccbc289d284.png" width="80%"/> <img src="https://cdn.jsdelivr.net/gh/TheY9/image@latest/2020/05/26/cc1a59c764ed4d96afb9cc16a220acdf.png" width="80%"/> <h1 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h1><h2 id="一、Eclipse"><a href="#一、Eclipse" class="headerlink" title="一、Eclipse"></a>一、Eclipse</h2><blockquote><p>1.Eclipse <a href="https://www.eclipse.org/downloads/" target="_blank" rel="noopener">下载</a><br>2.Eclipse 用多了就熟悉了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> JavaSE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java环境搭建和开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/62824.html"/>
      <url>/62824.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="学习计划"><a href="#学习计划" class="headerlink" title="学习计划"></a>学习计划</h2><blockquote><p>1.这个博客最简单的功能已经实现，其他复杂的功能以后慢慢搞。<br>2.今后计划使用博客的方式，对学习的知识进行总结。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> plan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我的第一篇文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/16107.html"/>
      <url>/16107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
